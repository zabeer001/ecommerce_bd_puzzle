{
    "openapi": "3.0.0",
    "info": {
        "title": "My Cool API",
        "description": "API documentation for my Laravel application",
        "version": "1.0.0"
    },
    "paths": {
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a paginated list of categories",
                "description": "Returns a paginated list of categories, with optional search.",
                "operationId": "getCategoriesList",
                "parameters": [
                    {
                        "name": "paginate_count",
                        "in": "query",
                        "description": "Number of categories per page",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search categories by name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Category"
                                                    }
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "http://localhost:8961/api/categories?page=1"
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "http://localhost:8961/api/categories?page=3"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "http://localhost:8961/api/categories?page=2",
                                                    "nullable": true
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 25
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Creates a new category with a name, description, and optional image.",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Category name",
                                        "type": "string",
                                        "example": "Electronics"
                                    },
                                    "slug": {
                                        "description": "URL-friendly slug",
                                        "type": "string",
                                        "example": "electronics"
                                    },
                                    "description": {
                                        "description": "Category description",
                                        "type": "string",
                                        "example": "Electronic gadgets and devices."
                                    },
                                    "type": {
                                        "description": "Category type",
                                        "type": "string",
                                        "example": "product"
                                    },
                                    "image": {
                                        "description": "Image file to upload.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get details of a single category",
                "description": "Fetch a single category by its ID.",
                "operationId": "showCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Deletes a category and its associated media.",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/categories/{id}?_method=PUT": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update an existing category",
                "description": "Updates an existing category and its image.",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "Use 'PUT' to override POST method for L5-Swagger.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "PUT"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "New category name",
                                        "type": "string",
                                        "example": "Mobile Phones"
                                    },
                                    "slug": {
                                        "description": "New URL-friendly slug",
                                        "type": "string",
                                        "example": "mobile-phones"
                                    },
                                    "description": {
                                        "description": "Updated category description",
                                        "type": "string",
                                        "example": "Latest smartphones and accessories."
                                    },
                                    "type": {
                                        "description": "Updated category type",
                                        "type": "string",
                                        "example": "product"
                                    },
                                    "image": {
                                        "description": "New image file to upload.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve a list of all products",
                "description": "This endpoint retrieves all product records from the database.",
                "operationId": "1bfaa78d1c2c3848ab8165c5dadcad3e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "This endpoint allows the creation of a new product record, including image uploads.",
                "operationId": "e8185e307706e2cd84bbcf5171e2f09d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "The product name.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "The product URL slug.",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The product description.",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "category_id": {
                                        "description": "The ID of the product's category.",
                                        "type": "integer"
                                    },
                                    "sub_category_id": {
                                        "description": "The ID of the product's sub-category.",
                                        "type": "integer"
                                    },
                                    "price": {
                                        "description": "The product price.",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "old_price": {
                                        "description": "The product's old price.",
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "images": {
                                        "description": "Array of images to upload.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/products/{id}?_method=PUT": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Update an existing product",
                "description": "This endpoint updates an existing product record, including images.",
                "operationId": "dfdbb764a02c75636aba9d98b38f6b36",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the product to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "_method": {
                                        "description": "Override to handle PUT/PATCH requests with form-data.",
                                        "type": "string",
                                        "enum": [
                                            "PUT",
                                            "PATCH"
                                        ]
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "sub_category_id": {
                                        "type": "integer"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "old_price": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "images": {
                                        "description": "Array of new images to upload.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/products/{id}": {
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "description": "This endpoint deletes a product record and all its associated media.",
                "operationId": "e80a6ca46716acee6b47ea1ac91663c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the product to delete.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/sub-categories": {
            "get": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Get a paginated list of subcategories",
                "operationId": "getSubCategories",
                "parameters": [
                    {
                        "name": "paginate_count",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search subcategories by name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter subcategories by category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubCategory"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 25
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Create a new subcategory",
                "operationId": "storeSubCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Smartphones"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "smartphones"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Mobile devices and accessories"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "SubCategory created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubCategory"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/api/sub-categories/{identifier}": {
            "get": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Get a single subcategory by ID or slug",
                "description": "Fetch a subcategory by its numeric ID or slug string.",
                "operationId": "showSubCategory",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "ID (integer) or slug (string) of the subcategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SubCategory fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Smartphones"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "smartphones"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Mobile phones and accessories"
                                                },
                                                "category_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "category": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SubCategory not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/sub-categories/{id}": {
            "post": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Update a subcategory",
                "description": "Updates an existing subcategory.",
                "operationId": "updateSubCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the subcategory",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "_method": {
                                        "description": "Method spoofing for PUT request.",
                                        "type": "string",
                                        "format": "hidden",
                                        "example": "PUT"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Name"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "updated-name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "SubCategory updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SubCategory updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SubCategory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SubCategory not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Delete a subcategory",
                "operationId": "deleteSubCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the subcategory",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SubCategory deleted successfully"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "title": "Category",
                "description": "Category model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Electronics"
                    },
                    "description": {
                        "type": "string",
                        "example": "Electronic gadgets and devices."
                    },
                    "slug": {
                        "type": "string",
                        "example": "electronics"
                    },
                    "type": {
                        "type": "string",
                        "example": "product"
                    },
                    "image": {
                        "type": "string",
                        "example": "http://localhost:8000/uploads/categories/image.jpg"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-24T10:12:12.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-24T10:12:12.000000Z"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product"
            },
            "SubCategory": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Smartphones"
                    },
                    "slug": {
                        "type": "string",
                        "example": "smartphones"
                    },
                    "description": {
                        "type": "string",
                        "example": "Mobile devices and accessories"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T18:05:05.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T18:05:05.000000Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "SubCategories",
            "description": "SubCategories"
        }
    ]
}